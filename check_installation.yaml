heat_template_version: 2015-04-30

description: Test heat stack

parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for all compute instances
    default: test_key
    constraints:
      - custom_constraint: nova.keypair
  image_id:
    type: string
    label: Image ID
    description: Image to be used for all compute instances
    default: ubuntu-trusty-x86_64
    constraints:
      - custom_constraint: glance.image
  instance_type:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used for all compute instances
    default: m1.small
    constraints:
      - custom_constraint: nova.flavor

  ports:
    type: comma_delimited_list
    label: ports
    default: "80,443,22"

  protocols:
    type: comma_delimited_list
    label: protocols
    default: "tcp,udp"

  public_net_id:
    type: string
    label: Public Network ID
    description: Public Network ID
    default: __public_net_id__
    

resources:
  test_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: server_security_group
      rules:
        repeat:
          for_each:
            <%port%>: { get_param: ports }
            <%protocol%>: { get_param: protocols }
          template:
            protocol: <%protocol%>
            remote_ip_prefix: 0.0.0.0/0
            port_range_min: <%port%>
            port_range_max: <%port%>

  private_net:
    type: OS::Neutron::Net
    properties:
      name: private_net

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: private_subnet
      network_id: { get_resource: private_net }
      cidr: "10.8.1.0/24"
      dns_nameservers: [ "8.8.8.8", "8.8.4.4" ]
      ip_version: 4

  private_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: { network: public }

  private_router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: private_router }
      subnet: { get_resource: private_subnet }


  instance_port:
    type: OS::Neutron::Port
    properties:
      name: instance_port
      network: { get_resource: private_net }
      security_groups: 
        - { get_resource: test_security_group}
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }

  instance_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: instance_port }

  instance:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      networks:
      - port: { get_resource: instance_port }
