# http://docs.openstack.org/liberty/install-guide-ubuntu/keystone.html
# http://docs.openstack.org/liberty/install-guide-ubuntu/keystone-install.html
# mysql and mariadb
- name: Create mysql based database
  mysql_db: name=keystone state=present
  when: relational_database == "mysql" or relational_database == "mariadb"

- name: Create mysql based database user to localhost
  mysql_user: name=keystone host=localhost password={{ keystone_dbpass }} priv=keystone.*:ALL,GRANT state=present
  when: relational_database == "mysql" or relational_database == "mariadb"

- name: Create mysql based database user to %
  mysql_user: name=keystone host=% password={{ keystone_dbpass }} append_privs=yes priv=keystone.*:ALL,GRANT state=present
  when: relational_database == "mysql" or relational_database == "mariadb"

# postgresql
- name: Create postgresql database
  postgresql_db: name=keystone
  when: relational_database == "postgresql"

- name: Create postgresql database user
  postgresql_user: db=keystone name=keystone password={{ keystone_dbpass }} priv=ALL
  when: relational_database == "postgresql"


- name: Install keystone
  apt: name={{ item }} state=present
  with_items:
  - keystone
  tags:
  - appliance

- name: Configure keystone service
  template: src=keystone.conf.j2 dest=/etc/keystone/keystone.conf owner=keystone group=root mode=0640
  notify:
  - populate database
  - fernet setup
  - credential setup
  - bootstrap

- meta: flush_handlers

- name: Configure apache hostname
  lineinfile: dest=/etc/apache2/apache2.conf regexp='^\s*ServerName' line="ServerName {{ admin_hostname }}" owner=root group=root mode=0644
  notify:
  - restart apache2

- name: Configure apache http server
  template: src=server-name.conf.j2 dest=/etc/apache2/conf-available/server-name.conf owner=root group=root mode=0644
  notify:
  - restart apache2

- name: Enable apache virtualhost
  file: src=/etc/apache2/conf-available/server-name.conf dest=/etc/apache2/conf-enabled/server-name.conf owner=root group=root state=link
  notify:
  - restart apache2

- meta: flush_handlers

#- name: Remove sqlite database
#  file: path=/var/lib/keystone/keystone.db state=absent

# Create the service entity and API endpoint
# http://docs.openstack.org/liberty/install-guide-ubuntu/keystone-services.html
- name: Install python-openstackclient
  package: name=python-openstackclient state=present

# Create projects, users and roles
# http://docs.openstack.org/newton/install-guide-debian/keystone-users.html

# Create the service project
- name: Test if service project exists
  shell: |
    openstack project list | grep " service " | wc -l
  register: exists
  ignore_errors: True
  failed_when: "'0' in exists.stdout"

- name: Create the service project
  shell: |
    openstack project create --domain {{ keystone_default_domain_name }} --description "{{ keystone_service_project_description}}" {{ keystone_service_project_name }}
  when: exists|failed

# Whe don't need non admin stuff. This will be created by admin after installation.
## Non admin project, user and role
#- name: Test if non admin project exists
#  shell: |
#    openstack project list | grep " {{ keystone_user_project_name }} " | wc -l
#  register: exists
#  ignore_errors: True
#  failed_when: "'0' in exists.stdout"

#- name: Create the non admin project
#  shell: |
#    openstack project create --domain {{ keystone_default_domain_name }} --description "{{ keystone_user_project_description }}" {{ keystone_user_project_name }}
#  when: exists|failed


- name: Test if user role exists
  shell: |
    openstack role list | grep " user " | wc -l
  register: exists
  ignore_errors: True
  failed_when: "'0' in exists.stdout"

- name: Create the user role
  shell: |
    openstack role create {{ keystone_user_role }}
  when: exists|failed

#- name: Test if non admin user exists
#  shell: |
#    openstack user list | grep " {{ keystone_user_name }} " | wc -l
#  register: exists
#  ignore_errors: True
#  failed_when: "'0' in exists.stdout"

#- name: Create the non admin user and associate to non admin project with user role
#  shell: |
#    openstack user create --domain {{ keystone_default_domain_name }} --password {{ keystone_user_password }} {{ keystone_user_name }}
#    openstack role add --project {{ keystone_user_project_name }} --user {{ keystone_user_name }} {{ keystone_user_role }}
#  when: exists|failed


# http://docs.openstack.org/liberty/install-guide-ubuntu/keystone-openrc.html
#  Create OpenStack client environment scripts
- name: Create admin-openrc.sh environment script
  template: src=admin-openrc.sh.j2 dest=/root/{{ keystone_admin_name }}-openrc.sh

#- name: Create {{ keystone_user_name }} environment script
#  template: src=user-openrc.sh.j2 dest=/root/{{ keystone_user_name }}-openrc.sh
